version: '3.9'

volumes:
  postgres_data:
  rabbitmq_data:
  redis_data:


services:
  integrator_db:
    image: 'postgres:13'
    container_name: integrator_db
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - ./.env
    expose:
      - ${POSTGRES_PORT}
    healthcheck:
      test: [ "CMD-SHELL", "su postgres", "&&", "pg_isready" ]
      interval: 5s
      timeout: 5s
      retries: 10

  integrator_redis:
    image: 'bitnami/redis:6.2.6'
    container_name: integrator_redis
    volumes:
      - redis_data:/bitnami/redis/data
    env_file:
      - ./.env
    expose:
      - ${REDIS_PORT}
    healthcheck:
      test: [ "CMD-SHELL", "redis-cli", "ping" ]
      interval: 5s
      timeout: 5s
      retries: 10

  integrator_fastapi:
    build:
      context: .
      dockerfile: src/Dockerfile
    container_name: integrator_fastapi
    command: 'gunicorn main:app --bind 0.0.0.0:8000 -k uvicorn.workers.UvicornWorker'
    restart: always
    env_file:
      - ./.env
    expose:
      - ${SERVICE_PORT}
    logging:
      options:
        max-size: 50m
    depends_on:
      integrator_db:
        condition: service_healthy

  integrator_nginx:
    container_name: integrator_nginx
    restart: always
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/nginx.conf
    build:
      context: .
      dockerfile: ./nginx/Dockerfile
    ports:
      - ${NGINX_PORT}:8080
    env_file:
      - ./.env
    depends_on:
      - integrator_fastapi

  integrator_tests:
    container_name: integrator_tests
    env_file:
      - ./.env
    build:
      context: .
      dockerfile: tests/Dockerfile
    command: >
      sh -c "pytest /app/tests -s -v -p no:warnings && flake8 ."
    depends_on:
      - integrator_fastapi
    profiles:
      - testing

  rabbitmq:
    image: 'bitnami/rabbitmq:3.7'
    container_name: rabbitmq
    expose:
      - 4369
      - 5672
      - 25672
      - 15672
    volumes:
      - rabbitmq_data:/bitnami
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3

  celery_flower:
    image: gregsi/latest-celery-flower-docker:latest
    container_name: celery_flower
    environment:
      - AMQP_USERNAME=user
      - AMQP_PASSWORD=bitnami
      - AMQP_ADMIN_USERNAME=user
      - AMQP_ADMIN_PASSWORD=bitnami
      - AMQP_HOST=rabbitmq
      - AMQP_PORT=5672
      - AMQP_ADMIN_HOST=rabbitmq
      - AMQP_ADMIN_PORT=15672
      - FLOWER_BASIC_AUTH=user:test
    ports:
      - '5555:5555'
    depends_on:
      rabbitmq:
        condition: service_healthy

  celery_worker:
    build:
      context: .
      dockerfile: src/Dockerfile
    container_name: celery_worker
    command: 'celery -A worker.celery_worker worker -l info -Q test-queue -c 1'
    restart: always
    env_file:
      - ./.env
    logging:
      options:
        max-size: 50m
    depends_on:
      rabbitmq:
        condition: service_healthy
